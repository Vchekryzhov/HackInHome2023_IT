import sqlite3
import telebot
from telebot import types
import bcrypt

# 6944633884:AAGqYnI85VIRnq9DlR4AoiZ1O6pWAEm0y38
bot = telebot.TeleBot("6944633884:AAGqYnI85VIRnq9DlR4AoiZ1O6pWAEm0y38") 
conn = sqlite3.connect('C:\\Users\\Dmitriy Novichkov\\Desktop\\HackInHome 2023\\database.db',
                       check_same_thread=False)
cursor = conn.cursor()
cursor.execute('SELECT MAX(Indexes) FROM FirstOfAll')
max_index = cursor.fetchone()[0]

commands = ["‚ùì –ü–æ–∏—Å–∫", "üëã –°–ø—Ä–∞–≤–∫–∞", "‚úÖ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç", "üïπ –£–¥–∞–ª–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞", "üìï –¢–∏–ø", "üìó –ù–∞–∑–≤–∞–Ω–∏–µ",
            "üìò –ù–æ–º–µ—Ä", "üíæ –î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞", "üíæ –î–∞—Ç–∞ –≤–≤–æ–¥–∞ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ", "üìã –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞",
            "üíº –î–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞"]

key = ""
want_delete_it = False      # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –Ω–∞–º–µ—Ä–µ–Ω–∏–µ —É–¥–∞–ª–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞.
want_add_it = False         # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞.
want_add_it2 = False        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞.
is_find = False

users_laws = dict()
admin_user_id = []
all_users_id = set()

salt = bcrypt.gensalt()

types_docs = ["–ì–û–°–¢ (–≥–æ—Å. –°—Ç–∞–Ω–¥–∞—Ä—Ç)", "–†–î (—Ä—É–∫ –¥–æ–∫—É–º–µ–Ω—Ç)", "–£–∫–∞–∑ (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞)", "–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞",
              "–°–¢–û (—Å—Ç–∞–Ω–¥–∞—Ä—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏)", "–ú–ò (–º–µ—Ç–∞–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è)", "–†–ò (–†–∞–±–æ—á–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è)",
              "–ü—Ä–∏–∫–∞–∑ (–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è)", "–†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è)",
              "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è)", "–î–æ–≥–æ–≤–æ—Ä (–º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è–º–∏)"]
win = bcrypt.hashpw('win'.encode(), salt)
winwin = bcrypt.hashpw('winwin'.encode(), salt)
access_levels = {win: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], winwin: [4, 2, 5]}
admin_password = bcrypt.hashpw('abswin'.encode(), salt)


def check_user(user_id, type_el):
    if user_id in admin_user_id:
        return True
    for el in access_levels[users_laws[user_id]]:
        if type_el == types_docs[el - 1]:
            return True
    return False


def searchByType(message, id_user):
    ind = -1
    for i in range(1, max_index + 1):
        cursor.execute('SELECT Type FROM FirstOfAll WHERE Indexes = ?',
                       (i,))
        res = cursor.fetchall()

        concatenatedResult = ''.join(str(item) for item in res[0]).lower()

        if message in concatenatedResult:
            ind = i
    global is_find
    is_find = False
    return ind


def searchByName(message):
    ind = -1
    for i in range(1, max_index + 1):
        cursor.execute('SELECT Name FROM FirstOfAll WHERE Indexes = ?',
                       (i,))
        res = cursor.fetchall()

        concatenatedResult = ' '.join(str(item) for item in res[0]).lower()
        if message in concatenatedResult:
            ind = i
    global is_find
    is_find = False
    return ind


def searchByNumber(message):
    ind = -1
    for i in range(1, max_index + 1):
        cursor.execute('SELECT Number FROM FirstOfAll WHERE Indexes = ?',
                       (i,))
        res = cursor.fetchall()

        concatenatedResult = ' '.join(str(item) for item in res[0]).lower()
        if message == concatenatedResult:
            ind = i
    global is_find
    is_find = False
    return ind


def searchByReleaseDate(message):
    ind = -1
    for i in range(1, max_index + 1):
        cursor.execute('SELECT ReleaseDate FROM FirstOfAll WHERE Indexes = ?',
                       (i,))
        res = cursor.fetchall()

        concatenatedResult = ' '.join(str(item) for item in res[0]).lower()
        if message == concatenatedResult:
            ind = i
    global is_find
    is_find = False
    return ind

def searchByStartDate(message):
    ind = -1
    for i in range(1, max_index + 1):
        cursor.execute('SELECT StartDate FROM FirstOfAll WHERE Indexes = ?',
                       (i,))
        res = cursor.fetchall()

        concatenatedResult = ' '.join(str(item) for item in res[0]).lower()
        if message == concatenatedResult:
            ind = i
    global is_find
    is_find = False
    return ind


def searchByKeyWords(message):
    ind = -1
    for i in range(1, max_index + 1):
        cursor.execute('SELECT KeyWords FROM FirstOfAll WHERE Indexes = ?',
                       (i,))
        res = cursor.fetchall()

        concatenatedResult = ' '.join(str(item) for item in res[0]).lower()
        if message in concatenatedResult:
            ind = i
    global is_find
    is_find = False
    return ind


@bot.message_handler(commands=['nevermind'])
def forget_me(message):
    if message.from_user.id in all_users_id:
        all_users_id.remove(message.from_user.id)
        if message.from_user.id in admin_user_id:
            admin_user_id.remove(message.from_user.id)
        if message.from_user.id in users_laws.keys():
            del users_laws[message.from_user.id]
        bot.send_message(message.chat.id, text='–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å—Ç—ë—Ä—Ç—ã.')


def process_search_query(message, choice):
    search_query = message.text
    if (choice == "üìï –¢–∏–ø"):
        search_query = search_query.lower()
        resInd = searchByType(search_query, message.from_user.id)
        if (resInd >= 0):
            cursor.execute(
                'SELECT Type, Name, Number, ReleaseDate, StartDate, KeyWords FROM FirstOfAll WHERE Indexes = ?',
                (resInd,))
            res = cursor.fetchall()
            res[0] = list(res[0])
            if check_user(message.from_user.id, res[0][0]):
                bot.send_message(message.chat.id, text="–í–æ–∑–º–æ–∂–Ω–æ, –í—ã –∏–º–µ–ª–∏ –≤–≤–∏–¥—É?\n")
                for i in res[0]:
                    i = i.replace("\n", " ")
                    bot.send_message(message.chat.id, text=i)
            else:
                bot.send_message(message.chat.id,
                                 text="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏! –£ –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω–æ–º—É —Ç–∏–ø—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!")
        else:
            bot.send_message(message.chat.id, text="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å")
    elif (choice == "üìó –ù–∞–∑–≤–∞–Ω–∏–µ"):
        search_query = search_query.lower()
        resInd = searchByName(search_query)
        if (resInd != -1):
            bot.send_message(message.chat.id, text="–í–æ–∑–º–æ–∂–Ω–æ, –í—ã –∏–º–µ–ª–∏ –≤–≤–∏–¥—É?\n")
            cursor.execute(
                'SELECT Type, Name, Number, ReleaseDate, StartDate, KeyWords FROM FirstOfAll WHERE Indexes = ?',
                (resInd,))
            res = cursor.fetchall()
            res[0] = list(res[0])
            if check_user(message.from_user.id, res[0][0]):
                bot.send_message(message.chat.id, text="–í–æ–∑–º–æ–∂–Ω–æ, –í—ã –∏–º–µ–ª–∏ –≤–≤–∏–¥—É?\n")
                for i in res[0]:
                    i = i.replace("\n", " ")
                    bot.send_message(message.chat.id, text=i)
            else:
                bot.send_message(message.chat.id,
                                 text="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏! –£ –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω–æ–º—É —Ç–∏–ø—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!")
        else:
            bot.send_message(message.chat.id, text="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å")
    elif (choice == "üìò –ù–æ–º–µ—Ä"):
        search_query = search_query.lower()
        resInd = searchByNumber(search_query)
        if (resInd != -1):
            cursor.execute(
                'SELECT Type, Name, Number, ReleaseDate, StartDate, KeyWords FROM FirstOfAll WHERE Indexes = ?',
                (resInd,))
            res = cursor.fetchall()
            res[0] = list(res[0])
            if check_user(message.from_user.id, res[0][0]):
                bot.send_message(message.chat.id, text="–í–æ–∑–º–æ–∂–Ω–æ, –í—ã –∏–º–µ–ª–∏ –≤–≤–∏–¥—É?\n")
                for i in res[0]:
                    i = i.replace("\n", " ")
                    bot.send_message(message.chat.id, text=i)
            else:
                bot.send_message(message.chat.id,
                                 text="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏! –£ –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω–æ–º—É —Ç–∏–ø—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!")
        else:
            bot.send_message(message.chat.id, text="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å")
    elif (choice == "üíæ –î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞"):
        search_query = search_query.lower()
        resInd = searchByReleaseDate(search_query)
        if (resInd != -1):
            cursor.execute(
                'SELECT Type, Name, Number, ReleaseDate, StartDate, KeyWords FROM FirstOfAll WHERE Indexes = ?',
                (resInd,))
            res = cursor.fetchall()
            res[0] = list(res[0])
            if check_user(message.from_user.id, res[0][0]):
                bot.send_message(message.chat.id, text="–í–æ–∑–º–æ–∂–Ω–æ, –í—ã –∏–º–µ–ª–∏ –≤–≤–∏–¥—É?\n")
                for i in res[0]:
                    i = i.replace("\n", " ")
                    bot.send_message(message.chat.id, text=i)
            else:
                bot.send_message(message.chat.id,
                                 text="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏! –£ –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω–æ–º—É —Ç–∏–ø—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!")
        else:
            bot.send_message(message.chat.id, text="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å")
    elif (choice == "üíæ –î–∞—Ç–∞ –≤–≤–æ–¥–∞ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ"):
        search_query = search_query.lower()
        resInd = searchByStartDate(search_query)
        if (resInd != -1):
            cursor.execute(
                'SELECT Type, Name, Number, ReleaseDate, StartDate, KeyWords FROM FirstOfAll WHERE Indexes = ?',
                (resInd,))
            res = cursor.fetchall()
            res[0] = list(res[0])
            if check_user(message.from_user.id, res[0][0]):
                bot.send_message(message.chat.id, text="–í–æ–∑–º–æ–∂–Ω–æ, –í—ã –∏–º–µ–ª–∏ –≤–≤–∏–¥—É?\n")
                for i in res[0]:
                    i = i.replace("\n", " ")
                    bot.send_message(message.chat.id, text=i)
            else:
                bot.send_message(message.chat.id,
                                 text="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏! –£ –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω–æ–º—É —Ç–∏–ø—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!")
        else:
            bot.send_message(message.chat.id, text="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å")
    elif (choice == "üìã –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞"):
        search_query = search_query.lower()
        resInd = searchByKeyWords(search_query)
        if (resInd != -1):
            cursor.execute(
                'SELECT Type, Name, Number, ReleaseDate, StartDate, KeyWords FROM FirstOfAll WHERE Indexes = ?',
                (resInd,))
            res = cursor.fetchall()
            res[0] = list(res[0])
            if check_user(message.from_user.id, res[0][0]):
                bot.send_message(message.chat.id, text="–í–æ–∑–º–æ–∂–Ω–æ, –í—ã –∏–º–µ–ª–∏ –≤–≤–∏–¥—É?\n")
                for i in res[0]:
                    i = i.replace("\n", " ")
                    bot.send_message(message.chat.id, text=i)
            else:
                bot.send_message(message.chat.id,
                                 text="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏! –£ –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω–æ–º—É —Ç–∏–ø—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!")
        else:
            bot.send_message(message.chat.id, text="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å")


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id,
                     text="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –í–∞–º —Å –ø–æ–∏—Å–∫–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –ë–î.\n"
                          "–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å...")
    all_users_id.add(message.from_user.id)
    bot.register_next_step_handler(message, authentication)


@bot.message_handler(content_types=['text'])
def authentication(message):

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–æ—Ü–µ–¥—É—Ä–µ –æ–±—â–µ–Ω–∏—è —Å –Ω–∏–º.
    if message.from_user.id in users_laws.keys():
        bot.register_next_step_handler(message, func)
        func(message)

    else:  # –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ —Ç—Ä–µ–±—É–µ–º –ø–∞—Ä–æ–ª—å.
        if bcrypt.hashpw(message.text.encode(), salt) in access_levels.keys():
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("üëã –°–ø—Ä–∞–≤–∫–∞")
            btn2 = types.KeyboardButton("‚ùì –ü–æ–∏—Å–∫")
            btn3 = types.KeyboardButton("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç")
            markup.add(btn1, btn2, btn3)
            bot.send_message(message.chat.id, text='–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞.\n'
                                                   '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:', reply_markup=markup)
            # –í —Å–ª—É—á–∞–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ—Ü–µ–¥—É—Ä–µ
            users_laws[message.from_user.id] = bcrypt.hashpw(message.text.encode(), salt)
            bot.register_next_step_handler(message, func)
        elif admin_password == bcrypt.hashpw(message.text.encode(), salt):
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("üëã –°–ø—Ä–∞–≤–∫–∞")
            btn2 = types.KeyboardButton("‚ùì –ü–æ–∏—Å–∫")
            btn3 = types.KeyboardButton("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç")
            markup.add(btn1, btn2, btn3)
            button4 = types.KeyboardButton("üïπ –£–¥–∞–ª–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞")
            button5 = types.KeyboardButton("üíº –î–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞")
            markup.add(button4, button5)
            bot.send_message(message.chat.id, text='–í—ã –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.\n'
                                                   '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:', reply_markup=markup)
            users_laws[message.from_user.id] = "abswin"
            admin_user_id.append(message.from_user.id)
            bot.register_next_step_handler(message, func)
        else:
            if (message.from_user.id in all_users_id and bcrypt.hashpw(message.text.encode(), salt)
                    not in commands):
                bot.reply_to(message, '–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π. –í—ã –Ω–µ –ø—Ä–æ—à–ª–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É...')
            elif (bcrypt.hashpw(message.text.encode(), salt) in commands
                  and message.from_user.id in all_users_id):
                bot.reply_to(message, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å...')
            else:
                bot.reply_to(message, '–ù–∞—á–Ω–∏—Ç–µ –±–µ—Å–µ–¥—É —Å –±–æ—Ç–æ–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤ –∫–æ–º–∞–Ω–¥—É /start.')


@bot.message_handler(content_types=['text'])
def func(message):
    global want_add_it, key, want_delete_it, is_find, want_add_it2
    if message.text == "‚ùì –ü–æ–∏—Å–∫":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üìï –¢–∏–ø")
        btn2 = types.KeyboardButton("üìó –ù–∞–∑–≤–∞–Ω–∏–µ")
        btn3 = types.KeyboardButton("üìò –ù–æ–º–µ—Ä")
        btn4 = types.KeyboardButton("üíæ –î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞")
        btn5 = types.KeyboardButton("üíæ –î–∞—Ç–∞ –≤–≤–æ–¥–∞ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ")
        btn6 = types.KeyboardButton("üìã –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, back)
        bot.send_message(message.chat.id, text="–£–∫–∞–∂–∏—Ç–µ, –ø–æ –∫–∞–∫–æ–º—É —Å—Ç–æ–ª–±—Ü—É –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Å—Ç–∏ –ø–æ–∏—Å–∫:", reply_markup=markup)

    elif message.text == "üëã –°–ø—Ä–∞–≤–∫–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –ë–î?")
        btn2 = types.KeyboardButton("–ß—Ç–æ —ç—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –¥–µ–ª–∞—Ç—å?")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å –∏–∑ —Å–ø—Ä–∞–≤–∫–∏:", reply_markup=markup)
    elif message.text == "üìï –¢–∏–ø":
        is_find = True
        choice = "üìï –¢–∏–ø"
        bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
        bot.register_next_step_handler(message, process_search_query, choice)
    elif message.text == "üìó –ù–∞–∑–≤–∞–Ω–∏–µ":
        is_find = True
        choice = "üìó –ù–∞–∑–≤–∞–Ω–∏–µ"
        bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
        bot.register_next_step_handler(message, process_search_query, choice)
    elif message.text == "üìò –ù–æ–º–µ—Ä":
        is_find = True
        choice = "üìò –ù–æ–º–µ—Ä"
        bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
        bot.register_next_step_handler(message, process_search_query, choice)
    elif message.text == "üíæ –î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞":
        is_find = True
        choice = "üíæ –î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞"
        bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
        bot.register_next_step_handler(message, process_search_query, choice)
    elif message.text == "üíæ –î–∞—Ç–∞ –≤–≤–æ–¥–∞ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ":
        is_find = True
        choice = "üíæ –î–∞—Ç–∞ –≤–≤–æ–¥–∞ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ"
        bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
        bot.register_next_step_handler(message, process_search_query, choice)
    elif message.text == "üìã –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞":
        is_find = True
        choice = "üìã –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞"
        bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
        bot.register_next_step_handler(message, process_search_query, choice)
    elif message.text == "üëã –°–ø—Ä–∞–≤–∫–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –ë–î?")
        btn2 = types.KeyboardButton("–ß—Ç–æ —ç—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –¥–µ–ª–∞—Ç—å?")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å –∏–∑ —Å–ø—Ä–∞–≤–∫–∏:", reply_markup=markup)
    elif message.text == "‚úÖ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç":
        pass
    elif want_delete_it:
        want_delete_it = False
        key = bcrypt.hashpw(message.text.encode(), salt)
        if key in access_levels.keys():
            del access_levels[key]
            bot.send_message(message.chat.id, text='–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –±—ã–ª —É–¥–∞–ª—ë–Ω.')
        else:
            bot.send_message(message.chat.id, text='–ë—ã–ª —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞.')
    elif want_add_it:
        key = bcrypt.hashpw(message.text.encode(), salt)
        want_add_it = False
        want_add_it2 = True
        string = ""
        for i in range(len(types_docs)):
            string += str(i + 1) + ". " + types_docs[i] + "\n"
        bot.send_message(message.chat.id, text='–£–∫–∞–∂–∏—Ç–µ, –∫ –∫–∞–∫–∏–º —Ç–∏–ø–∞–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø. '
                                               '–í–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —á–∏—Å–ª–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–Ω–¥–µ–∫—Å–∞–º.\n' + string)
    elif want_add_it2:
        result = message.text.split()
        for i in range(len(result)):
            result[i] = int(result[i])
        access_levels[key] = result
        bot.send_message(message.chat.id, text="–ö–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω/–∏–∑–º–µ–Ω—ë–Ω.")
        want_add_it2 = False
    elif message.text == "üïπ –£–¥–∞–ª–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞":
        if message.from_user.id not in admin_user_id:
            bot.send_message(message.chat.id, text="–û—à–∏–±–∫–∞! –í—ã –Ω–µ –æ–±–ª–∞–¥–∞–µ—Ç–µ –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            bot.send_message(message.chat.id, text='–£–∫–∞–∂–∏—Ç–µ —É–¥–∞–ª—è–µ–º—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞:')
            want_delete_it = True
    elif message.text == "üíº –î–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞":
        if message.from_user.id not in admin_user_id:
            bot.send_message(message.chat.id, text="–û—à–∏–±–∫–∞! –í—ã –Ω–µ –æ–±–ª–∞–¥–∞–µ—Ç–µ –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            bot.send_message(message.chat.id, text='–£–∫–∞–∂–∏—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞:')
            want_add_it = True
    elif message.text == "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –ë–î?":
        bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –ø–æ–∏—Å–∫"
                                          " –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å")

    elif message.text == "–ß—Ç–æ —ç—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –¥–µ–ª–∞—Ç—å?":
        bot.send_message(message.chat.id, text="–≠—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç"
                                               " –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
                                               " –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É")

    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("üëã –°–ø—Ä–∞–≤–∫–∞")
        button2 = types.KeyboardButton("‚ùì –ü–æ–∏—Å–∫")
        button3 = types.KeyboardButton("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç")
        markup.add(button1, button2, button3)
        if message.from_user.id in admin_user_id:
            button4 = types.KeyboardButton("üïπ –£–¥–∞–ª–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞")
            button5 = types.KeyboardButton("üíº –î–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞")
            markup.add(button4, button5)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=markup)
    else:
        if not is_find:
            bot.send_message(message.chat.id, text="–û—à–∏–±–∫–∞. –¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç.")


bot.polling(none_stop=True)
