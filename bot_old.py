import sqlite3
import telebot
from telebot import types

bot = telebot.TeleBot("6944633884:AAGqYnI85VIRnq9DlR4AoiZ1O6pWAEm0y38")
conn = sqlite3.connect('database.db', check_same_thread=False)


cursor = conn.cursor()
cursor.execute('SELECT MAX(–ò–Ω–¥–µ–∫—Å—ã) FROM FirstOfAll')
max_index = cursor.fetchone()[0]
print(max_index)
def search(message):
    NUMBER_OF_ERRORS = float("inf")
    iterator = 0
    message = message.replace('.', '').replace(' ', '').lower()
    for i in range(1, max_index + 1):
        cursor.execute('SELECT Type, Name, Number, ReleaseDate, StartDate, KeyWords FROM FirstOfAll WHERE Indexes = ?', (i,))
        res = cursor.fetchall()

        tmpResult = concatenatedResult = ''.join(str(item) for item in res[0])
        concatenatedResult = concatenatedResult.replace('.', '').replace(' ', '').lower()
        minErrors = lev(message, concatenatedResult)
        if NUMBER_OF_ERRORS > minErrors:
            NUMBER_OF_ERRORS = minErrors
            iterator = i #–Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –æ–Ω –Ω–µ –Ω—É–∂–µ–Ω
            newResult = tmpResult
    return iterator, newResult

def process_search_query(message):
    search_query = message.text  # –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞
    it, resStr = search(search_query)  # it –Ω–µ –Ω—É–∂–µ–Ω –≤—Ä–æ–¥–µ
    bot.send_message(message.chat.id, text="–í–æ–∑–º–æ–∂–Ω—ã –≤—ã –∏–º–µ–ª–∏ –≤–≤–∏–¥—É?\n")
    bot.send_message(message.chat.id, text=resStr)

def get_numbers():
    cursor.execute('SELECT –ù–æ–º–µ—Ä FROM FirstOfAll')  # –ó–¥–µ—Å—å 'test' - —ç—Ç–æ –∏–º—è –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    numbers = cursor.fetchall()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ "–Ω–æ–º–µ—Ä"
    return [number[0] for number in numbers]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ "–Ω–æ–º–µ—Ä"



@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –°–ø—Ä–∞–≤–∫–∞")
    btn2 = types.KeyboardButton("‚ùì –ü–æ–∏—Å–∫")
    btn3 = types.KeyboardButton("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç")
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å –ø–æ–∏—Å–∫–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == "‚ùì –ü–æ–∏—Å–∫"):
        bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–≥–∏, —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞, –¥–∞—Ç—É –≤—ã—Ö–æ–¥–∞, –Ω–æ–º–µ—Ä –∏ —Ç–¥.")
        bot.register_next_step_handler(message, process_search_query)

    elif (message.text == "üëã –°–ø—Ä–∞–≤–∫–∞"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –±–¥?")
        btn2 = types.KeyboardButton("–ß—Ç–æ —ç—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –¥–µ–ª–∞—Ç—å?")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å –∏–∑ —Å–ø—Ä–∞–≤–∫–∏:", reply_markup=markup)
    elif (message.text == "‚úÖ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç"):
        pass
    elif (message.text == "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –±–¥?"):
        bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –ø–æ–∏—Å–∫"
                                          " –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å")

    elif (message.text == "–ß—Ç–æ —ç—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –¥–µ–ª–∞—Ç—å?"):
        bot.send_message(message.chat.id, text="–≠—Ç–æ—Ç –±–æ—Ç, —É–º–µ–µ—Ç"
                                               " –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
                                               " –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É")

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("üëã –°–ø—Ä–∞–≤–∫–∞")
        button2 = types.KeyboardButton("‚ùì –ü–æ–∏—Å–∫")
        button3 = types.KeyboardButton("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç")
        markup.add(button1, button2, button3)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    elif message.text == "–ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä–∞":
        numbers = get_numbers()  # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ "–Ω–æ–º–µ—Ä"
        if numbers:
            bot.send_message(message.chat.id, text=f"–ó–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ '–Ω–æ–º–µ—Ä': {', '.join(map(str, numbers))}")
        else:
            bot.send_message(message.chat.id, text="–°—Ç–æ–ª–±–µ—Ü '–Ω–æ–º–µ—Ä' –ø—É—Å—Ç.")
    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª..")


# @bot.message_handler(content_types=['text'])
# def get_text_messages(message):
#     if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
#         bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –í–∞—à–µ –∏–º—è –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!')
#
#         us_id = message.from_user.id
#         us_name = message.from_user.first_name
#         us_sname = message.from_user.last_name
#         username = message.from_user.username
#
#         db_table_val(user_id=us_id, user_name=us_name, user_surname=us_sname, username=username)

bot.polling(none_stop=True)